# Rule to run URL tests using ts-node for TypeScript files
# Each line runs a test on a specific URL
test_url:
	@ts-node test/url_test.ts https://github.com/cloudinary/cloudinary_npm
	@ts-node test/url_test.ts https://www.npmjs.com/package/express
	@ts-node test/url_test.ts https://github.com/nullivex/nodist
	@ts-node test/url_test.ts https://github.com/lodash/lodash
	@ts-node test/url_test.ts https://www.npmjs.com/package/browserify

# Rule to run all URL tests by invoking the test_url rule
testall:
	@make test_url

# Rule to refresh the Node.js environment
# Deletes the current `node_modules` directory and reinstalls all necessary dependencies
refresh_node:
	@rm -rf node_modules # Remove node_modules directory
	@npm install         # Install the project dependencies from package.json
	@npm install axios@latest # Install the latest version of axios
	@npm install ts-node@latest # Install the latest version of ts-node for running TypeScript files
	@npm install typescript@latest # Install the latest TypeScript compiler
	@npm install @types/node@latest # Install the latest Node.js type definitions for TypeScript
	@npm install @types/axios@latest # Install the latest axios type definitions for TypeScript
	@npm install jest@latest # Install the latest version of Jest for testing
	@npm install @types/jest@latest # Install the latest Jest type definitions for TypeScript

# Rule to clean up JavaScript files generated by TypeScript compilation
# It removes all JavaScript files and deletes the dist folder (if present)
clean_js:
	@find . -type f -name "*.js" -exec rm -f {} + # Find and delete all .js files
	@find dist -mindepth 1 -delete # Delete all files and subdirectories inside the dist directory
